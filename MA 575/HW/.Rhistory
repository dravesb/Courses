boxcox(tigermodel)
par(mfrow=c(2,2))
plot(logtigermodel)
max(pga$PrizeMoney)
hist(pga$PrizeMoney)
summary(logtigermodel)
scat.mat = pga[,c(5:10, 12)]
pairs(scat.mat, gap = 0.4)
#reconstruct xstar model
g <- lm(GrossBoxOffice~YearsS1975,data=dat)
dat = read.table("~/Desktop/Courses/MA 575/book_data/boxoffice.txt", header = TRUE)
str(dat)
dat$YearsS1975 = dat$year - 1975
str(dat)
model = lm(GrossBoxOffice ~ YearsS1975, data = dat)
par(mfrow = c(2,2))
plot(dat$YearsS1975, dat$GrossBoxOffice)
abline(model)
plot(dat$YearsS1975, rstandard(model))
abline(model)
plot(dat$YearsS1975, dat$GrossBoxOffice)
abline(model)
plot(dat$YearsS1975, rstandard(model))
acf(model$residuals, lag.max = 20, main = "")
library(nlme)
modelgls = gls(GrossBoxOffice ~YearsS1975, data = dat, method = "ML", correlation = corAR1())
g <- lm(GrossBoxOffice~YearsS1975,data=dat)
rho <- 0.8782065
x <- model.matrix(g)
Sigma <- diag(length(dat$YearsS1975))
Sigma <- rho^abs(row(Sigma)-col(Sigma))
sm <- chol(Sigma)
smi <- solve(t(sm))
xstar <- smi %*% x
ystar <- smi %*% dat$GrossBoxOffice
m1tls <- lm(ystar ~ xstar-1)
summary(m1tls)
par(mfrow = c(2,2))
plot(m1tls)
mdat = data.frame(YearsS1975 = dat$YearsS1975 ,lGrossBoxOffice = log(dat$GrossBoxOffice))
modelgls = gls(lGrossBoxOffice ~YearsS1975, data = mdat, method = "ML", correlation = corAR1())
g <- lm(lGrossBoxOffice~YearsS1975,data=mdat)
rho <- 0.7010131
x <- model.matrix(g)
Sigma <- diag(length(mdat$YearsS1975))
Sigma <- rho^abs(row(Sigma)-col(Sigma))
sm <- chol(Sigma)
smi <- solve(t(sm))
xstar <- smi %*% x
ystar <- smi %*% mdat$lGrossBoxOffice
m2tls <- lm(ystar ~ xstar-1)
summary(m2tls)
par(mfrow = c(2,2))
plot(m2tls)
head(dat)
dat
g <- lm(lGrossBoxOffice~YearsS1975,data=mdat)
modelgls = gls(lGrossBoxOffice ~YearsS1975, data = mdat, method = "ML", correlation = corAR1())
summary(modelgls)
Sigma <- diag(length(mdat$YearsS1975))
Sigma <- rho^abs(row(Sigma)-col(Sigma))
sm <- chol(Sigma)
smi <- solve(t(sm))
xstar <- smi %*% x
ystar <- smi %*% mdat$lGrossBoxOffice
m2tls <- lm(ystar ~ xstar-1)
m2tls
par(mfrow = c(2,2))
plot(m2tls)
predict(m2tls)
plot(mdat$YearsS1975, m2tls$fitted.values)
plot(mdat$YearsS1975, m2tls$fitted.values)
points(mdat&YearsS1975, mdat$lGrossBoxOffice)
points(mdat&YearsS1975, mdat$lGrossBoxOffice)
,dat
mdat
names(mdat)
points(mdat&YearsS1975, mdat$lGrossBoxOffice)
plot(mdat$YearsS1975, m2tls$fitted.values)
points(mdat$YearsS1975, mdat$lGrossBoxOffice)
plot(mdat$YearsS1975, m2tls$fitted.values)
points(mdat$YearsS1975, mdat$lGrossBoxOffice)
plot(mdat$YearsS1975, m2tls$fitted.values)
points(mdat$YearsS1975, mdat$lGrossBoxOffice, col = "red")
plot(mdat$YearsS1975, mdat$lGrossBoxOffice, col = "red")
plot(mdat$YearsS1975, m2tls$fitted.values)
plot(mdat$YearsS1975, mdat$lGrossBoxOffice, col = "red")
plot(mdat$YearsS1975, m2tls$fitted.values)
plot(mdat$YearsS1975, mdat$lGrossBoxOffice, col = "red")
mdat = data.frame(YearsS1975 = dat$YearsS1975,lGrossBoxOffice = log(dat$GrossBoxOffice))
mdat
modelgls = gls(lGrossBoxOffice ~YearsS1975, data = mdat, method = "ML", correlation = corAR1())
summary(modelgls)
plot(modelgls)
acf(modelgls)
acf(mdat$lGrossBoxOffice)
#reconstruct xstar model
g <- lm(lGrossBoxOffice~YearsS1975,data=mdat)
rho <- 0.7010131
x <- model.matrix(g)
Sigma <- diag(length(mdat$YearsS1975))
Sigma <- rho^abs(row(Sigma)-col(Sigma))
sm <- chol(Sigma)
smi <- solve(t(sm))
xstar <- smi %*% x
ystar <- smi %*% mdat$lGrossBoxOffice
m2tls <- lm(ystar ~ xstar-1)
summary(m2tls)
plot(m2tls)
ystar
acf(ystar)
acf(ystar)
Sigma
predx = data.frame(xstar = 33)
predx
predict(m2tls, predx)
df = data.frame(ystar = ystar, xstar = xstar)
df
df = data.frame(ystar,xstar)
df
df
xstar
ystar
xstar
df = data.frame(Y = ystar[,1],X = xstar[,2], Intercept = xstar[,1])
df
m2tls <- lm(Y ~ X + Intercept -1, data.frame = df)
m2tls <- lm(Y ~ X + Intercept -1, data = df)
summary(m2tls)
par(mfrow = c(2,2))
plot(m2tls)
predx = data.frame(xstar = 33)
predict(m2tls, predx)
predx = data.frame(X = 33)
predict(m2tls, predx)
df
predx = data.frame(X = 33, Intercept = 0.4192492)
predict(m2tls, predx)
pred = predict(m2tls, predx)
plot(c(mdat$YearsS1975, 33), c(mdat$lGrossBoxOffice, pred))
#model data
mdat = data.frame(YearsS1975 = dat$YearsS1975,lGrossBoxOffice = log(dat$GrossBoxOffice))
#build AR 1 model with Maximum Likelihood Coefficents
modelgls = gls(lGrossBoxOffice ~YearsS1975, data = mdat, method = "ML", correlation = corAR1())
#construct xstar model
g <- lm(lGrossBoxOffice~YearsS1975,data=mdat)
rho <- 0.7010131
x <- model.matrix(g)
x
Sigma <- diag(length(mdat$YearsS1975))
Sigma <- rho^abs(row(Sigma)-col(Sigma))
sm <- chol(Sigma)
sm
xstar <- smi %*% x
ystar <- smi %*% mdat$lGrossBoxOffice
acf(ystar)
df = data.frame(Y = ystar[,1],X = xstar[,2], Intercept = xstar[,1])
m2tls <- lm(Y ~ X + Intercept -1, data = df)
summary(m2tls)
par(mfrow = c(2,2))
plot(m2tls)
hist(dat$GrossBoxOffice)
#take a look at diagnostics for this model
par(mfrow = c(2,2))
plot(m1tls)
log(dat$GrossBoxOffice)
modelgls = gls(lGrossBoxOffice ~YearsS1975, data = mdat, method = "ML", correlation = corAR1())
g <- lm(lGrossBoxOffice~YearsS1975,data=mdat)
g
plot(g)
plot(modelgls$fitted)
plot(mdat$YearsS1975, modelgls$fitted)
plot(mdat$YearsS1975, modelgls$fitted)
plot(mdat$YearsS1975, mdat$lGrossBoxOffice)
abline(g)
rho <- 0.7010131
x <- model.matrix(g)
Sigma <- diag(length(mdat$YearsS1975))
Sigma <- rho^abs(row(Sigma)-col(Sigma))
sm <- chol(Sigma)
smi <- solve(t(sm))
xstar <- smi %*% x
ystar <- smi %*% mdat$lGrossBoxOffice
acf(ystar)
m2tls <- lm(Y ~ X + Intercept -1, data = df)
m2tls
m2tls$fitted.values
m2tls$fitted.values
m1tls$fitted.values
dat$GrossBoxOffice
par(mfrow = c(2,2))
plot(m1tls)
mdat = data.frame(YearsS1975 = log(dat$YearsS1975),lGrossBoxOffice = log(dat$GrossBoxOffice))
modelgls = gls(lGrossBoxOffice ~ YearsS1975, data = mdat, method = "ML", correlation = corAR1())
summary(modelgls)
g <- lm(lGrossBoxOffice~YearsS1975,data=mdat)
rho <- 0.9722538
x <- model.matrix(g)
Sigma <- diag(length(mdat$YearsS1975))
Sigma <- rho^abs(row(Sigma)-col(Sigma))
sm <- chol(Sigma)
smi <- solve(t(sm))
xstar <- smi %*% x
ystar <- smi %*% mdat$lGrossBoxOffice
acf(ystar)
df = data.frame(Y = ystar[,1],X = xstar[,2], Intercept = xstar[,1])
m2tls <- lm(Y ~ X + Intercept -1, data = df)
summary(m2tls)
par(mfrow = c(2,2))
plot(m2tls)
mdat = data.frame(YearsS1975 = dat$YearsS1975,lGrossBoxOffice = log(dat$GrossBoxOffice))
modelgls = gls(lGrossBoxOffice ~ YearsS1975, data = mdat, method = "ML", correlation = corAR1())
g <- lm(lGrossBoxOffice~YearsS1975,data=mdat)
summary(modelgls)
rho <- 0.7010131
x <- model.matrix(g)
Sigma <- diag(length(mdat$YearsS1975))
Sigma <- rho^abs(row(Sigma)-col(Sigma))
sm <- chol(Sigma)
smi <- solve(t(sm))
xstar <- smi %*% x
ystar <- smi %*% mdat$lGrossBoxOffice
mdat = data.frame(YearsS1975 = dat$YearsS1975,lGrossBoxOffice = log(dat$GrossBoxOffice))
#build AR 1 model with Maximum Likelihood Coefficents
modelgls = gls(lGrossBoxOffice ~ YearsS1975, data = mdat, method = "ML", correlation = corAR1())
#construct xstar model
g <- lm(lGrossBoxOffice~YearsS1975,data=mdat)
rho <- 0.7010131
x <- model.matrix(g)
Sigma <- diag(length(mdat$YearsS1975))
Sigma <- rho^abs(row(Sigma)-col(Sigma))
sm <- chol(Sigma)
smi <- solve(t(sm))
xstar <- smi %*% x
ystar <- smi %*% mdat$lGrossBoxOffice
#take a look at acf of ystar
acf(ystar)
#build new model
df = data.frame(Y = ystar[,1],X = xstar[,2], Intercept = xstar[,1])
m2tls <- lm(Y ~ X + Intercept -1, data = df)
summary(m2tls)
#take a look at diagnostics for this model
par(mfrow = c(2,2))
plot(m2tls)
dim(Sigma)
predict(modelgls, predx)
predx = data.frame(YearsS1975 = 33)
predict(modelgls, predx)
exp(7.060506)
modelgls$fitted
dat = read.table("~/Desktop/Courses/MA 575/book_data/boxoffice.txt", header = TRUE)
#take a look
str(dat)
#Make YearsS1975
dat$YearsS1975 = dat$year - 1975
#take a loot
str(dat)
#construct model 9.6
model = lm(GrossBoxOffice ~ YearsS1975, data = dat)
par(mfrow = c(2,2))
plot(dat$YearsS1975, dat$GrossBoxOffice)
abline(model)
plot(dat$YearsS1975, rstandard(model))
acf(model$residuals, lag.max = 20, main = "")
library(nlme)
modelgls = gls(GrossBoxOffice ~YearsS1975, data = dat, method = "ML", correlation = corAR1())
g <- lm(GrossBoxOffice~YearsS1975,data=dat)
modelgls$fitted
dat$GrossBoxOffice
plot(model$fitted.values)
plot(model$fitted.values)
plot(dat$GrossBoxOffice)
points(modelgls$fitted)
mdat = data.frame(YearsS1975 = dat$YearsS1975,lGrossBoxOffice = log(dat$GrossBoxOffice))
modelgls = gls(lGrossBoxOffice ~ YearsS1975, data = mdat, method = "ML", correlation = corAR1())
plot(mdat$lGrossBoxOffice)
points(modelgls$fitted)
predx = data.frame(YearsS1975 = 33)
modelgls = gls(lGrossBoxOffice ~ YearsS1975, data = mdat, method = "ML", correlation = corAR1())
predx
modelgls = gls(lGrossBoxOffice ~ YearsS1975, data = mdat, method = "ML", correlation = corAR1())
predict(modelgls, predx)
modelgls$fitted
plot(exp(mdat$lGrossBoxOffice))
points(exp(modelgls$fitted))
predict(modelgls, predx)
names(predict(modelgls, predx))
attr(predict(modelgls, predx))
predict(modelgls, predx)$p
predict(modelgls, predx)$P
predict(modelgls, predx)[1]
exp(predict(modelgls, predx)[1])
exp(mdat$lGrossBoxOffice)
plot(mdat$lGrossBoxOffice, type = "l")
plot(modelgls$fitted, type = "b", col = "red")
plot(mdat$lGrossBoxOffice, type = "b")
points(modelgls$fitted, type = "b", col = "red")
plot(exp(mdat$lGrossBoxOffice), type = "b")
points(exp(modelgls$fitted), type = "b", col = "red")
modelgls
par(mfrow = c(2,2))
plot(m2tls)
exp(predict(modelgls, predx)[1])
plot(c(dat$YearsS1975,33), c(modelgls$fitted, pred), type = "b")
pred = exp(predict(modelgls, predx)[1])
plot(c(dat$YearsS1975,33), c(modelgls$fitted, pred), type = "b")
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
pred
legend("topleft", c("black","red"), legend = c("Fitted/Predcited","Actual"))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
legend("topleft", c("black","red"), legend = c("Fitted/Predcited","Actual"))
legend("topleft", col = c("black","red"), legend = c("Fitted/Predcited","Actual"))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
legend("topleft", col = c("black","red"), legend = c("Fitted/Predcited","Actual"))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
legend("topleft", col = c("black","red"), legend = c("Fitted/Predcited","Actual"))
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"))
legend("topleft", col = c("black","red"), labels = c("Predicted","Actual"))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
legend("topleft", col = c("black","red"), labels = c("Predicted","Actual"))
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"))
Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"))
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"), pch = c(2,2))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"), pch = c(2,2))
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"), pch = c(3,3))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"), pch = c(3,3))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, col = "red")
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"), pch = c(1,1))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, pch = 2)
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"), pch = c(1,1))
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, pch = 3)
plot(c(dat$YearsS1975,33), c(exp(modelgls$fitted), pred), type = "b", xlab = "YearsS1975", ylab = "Gross Box Office (M)")
points(dat$YearsS1975, dat$GrossBoxOffice, pch = 3)
legend("topleft", col = c("black","red"), legend = c("Predicted","Actual"), pch = c(1,3))
combn(1,8)
combn(9,1)
combn(9,2)
combn(9,3)
expand.grid(1:7)
colnames("pga")
pga = read.csv("~/Desktop/Courses/MA 575/book_data/pgatour2006.csv")
colnames("pga")
colnames(pga)
mdat = pga[,c(3,5:10,12)]
colnames(mdat)
#build model matrix
mdat = pga[,c(3,5:10,12)]
mdat[,1] = log(mdat[,1])
#Set up data structures
best = matrix(0, ncol = 5, nrow = 2^7)
colnames(best) = c("Model", "R^2", "AIC", "AICc", "BIC")
n = nrow(pga)
#build aicc function
AICC = function(model,K, n){
return(AIC(model) + 2*(K)*(K+1)/(n - K-1))
}
#build list of all possible subsets
subsets = lapply(0:7, function(x) combn(7,x))
#fix boundary case
m = lm(mdat$PrizeMoney ~ 1)
best[1,] = as.numeric(c(0, summary(m)$adj.r.squared, AIC(m), AICC(m, 1, n), BIC(m)))
#loop over all possible subsets
counter = 2
#loop over subsets of size 1, 2,..., 7
for(i in 2:length(subsets)){
#loop over subsets of size i
for(j in 1:length(subsets[[i]][1,])){
#get variable indices we'll be using
variable_indices = subsets[[i]][,j] + 1
#build the model
m = lm(PrizeMoney~. , data = mdat[,c(1, variable_indices)])
#get statistics
name = as.numeric(paste(variable_indices, collapse = ""))
r2 = summary(m)$adj.r.squared
aic = AIC(m)
aicc = AICC(m, 1 + length(variable_indices),n)
bic = BIC(m)
best[counter,] = c(name, r2, aic, aicc, bic)
counter = counter + 1
}
}
#identify best models
R2m = best[which.max(best[,2]),1]
AICm = best[which.min(best[,3]),1]
AICcm = best[which.min(best[,4]),1]
BICm = best[which.min(best[,5]),1]
c(R2m, AICm, AICcm, BICm)
which.min(best[,5]),1
which.min(best[,5])
head(best)
R2m = best[which.max(best[,2]),1]
AICm = best[which.min(best[,3]),2]
AICcm = best[which.min(best[,4]),3]
BICm = best[which.min(best[,5]),5]
c(R2m, AICm, AICcm, BICm)
which.min(best[,5])
head(best)
summary(best[,5])
summary(best[,3])
summary(best[,4])
lm(PrizeMoney~., data = mdat)
m = lm(PrizeMoney~., data = mdat)
BIC(m)
AIC(m)
dim(mdat)
n
m = lm(PrizeMoney~GIR + BirdieConversion + Scrambling, data = mdat)
m
summary(m)
max(mdat[,1])
seq(10, -2, length = 100)
lambda
lambda
lambda <- 10^seq(10, -2, length = 100)
lambda
lambda <- 10^seq(20, -2, length = 100)
Y = length(lambda)
#get condition values
for(i in 1:length(lambda)){
val = (max + lambda[i])/(min + lambda[i])
Y[i] = log(val,10)
}
dat = read.csv("~/Desktop/Courses/MA 575/book_data/reducedbikedata2011.csv")
X = as.matrix(dat[,-c(1,2)])
design = t(X) %*% X
evals = eigen(design)$values
max = max(evals)
min = min(evals)
lambda <- 10^seq(20, -2, length = 100)
Y = length(lambda)
lambda
for(i in 1:length(lambda)){
val = (max + lambda[i])/(min + lambda[i])
Y[i] = log(val,10)
}
plot(log(lambda, 10), Y, type = "l", xlab = "Lambda", ylab = "Condition Number", main = "l", lty = 2)
swiss = datasets::swis
swiss = datasets::swiss
swiss
x = model.matrix(Fertility~., swiss)[,1]
head(x)
x
x <- model.matrix(Fertility~., swiss)[,-1]
x
class(x)
y = swiss$Fertility
y
class(y)
train = sample(1:nrow(x), nrow(x)/x)
train
train = sample(1:nrow(x), nrow(x)/2)
train
(-train)
(train)
(-train)
test = 1:nrow(x)[-train]
test
test = 1:nrow(x)[-train]
test
-train
1:nrow(x)[train]
(1:nrow(x))[train]
(1:nrow(x))[-train]
(1:nrow(x))[-train]
test = (1:nrow(x))[-train]
sort(c(train, test))
length(sort(c(train, test)))
nrow(x)
ytest = y[test]
head(train)
head(x)
head(swiss)
ols = lm(y[train]~x[train,])
ols
summary(ols)
pairs(x)
pairs(swiss)
pair(xtrain)
pairs(xtrain)
xtrain = x[train,]
xtest = x[test,]
ytrain = y[train]
ytest = y[test]
pairs(xtrain)
ols = lm(ytrain ~ ytest)
ols = lm(ytrain ~ xtrain)
ols
summary(ols)
install.packages("glmnet")
