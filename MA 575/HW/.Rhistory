pollutiondata <- read.csv2("~/Desktop/Fall 2017/MA 575/book_data/AirQualityData.csv",header=TRUE)
pollutiondata <- read.csv2("~/Desktop/Fall 2017/MA 575/HW/Lab 2/AirQualityData.csv",header=TRUE)
pollutiondata <- read.csv2("~/Desktop/Fall 2017/MA 575/HW/Lab2/AirQualityData.csv",header=TRUE)
setwd("/Desktop/Fall 2017/MA 575/HW")
setwd("~/Desktop/Fall 2017/MA 575/HW")
setwd("~/Desktop/Fall 2017/MA 575/Lab/Lab2")
pollutiondata <- read.csv2("~/Desktop/Fall 2017/MA 575/Labs/Lab2/AirQualityData.csv",header=TRUE)
pollutiondata[pollutiondata==-200]<-NA
Temperature = as.numeric(as.character(pollutiondata$Temperature))
Titania = as.numeric(as.character(pollutiondata$PT08.S2.NMHC.))
summary(Temperature)
summary(Titania)
tempdataset <- data.frame(Titania, Temperature)
rm(Temperature,Titania)
Bivariatedataset<-tempdataset[complete.cases(tempdataset), ]
Bivariatedataset<-Bivariatedataset[complete.cases(Bivariatedataset), ]
head(Bivariatedataset,10)
plot(Temperature,Titania,xlab="Temperature", ylab="Titania", data=Bivariatedataset)
plot(Bivariatedataset$Temperature,Bivariatedataset$Titania,xlab="Temperature", ylab="Titania")
m1 <- lm(Titania ~ Temperature, data = Bivariatedataset)
summary(m1)
plot(Bivariatedataset$Temperature,Bivariatedataset$Titania,xlab="Temperature", ylab="Titania")
abline(lsfit(Temperature,Titania, data = Bivariatedataset))
abline(lsfit(Bivariatedataset$Temperature,Bivariatedataset$Titania))
plot(Bivariatedataset$Temperature,Bivariatedataset$Titania,xlab="Temperature", ylab="Titania")
abline(lsfit(Bivariatedataset$Temperature,Bivariatedataset$Titania))
tval <- qt(1-0.05/2,8989)
tval
round(confint(m1,level=0.95),3)
StanRes2 <- rstandard(m1)
?rstandard
?
""
?rstandard()
??rstandard()
plot(Bivariatedataset$Temperature,StanRes2,xlab="Temperature", ylab="Standardized Residuals",xlim=c(-2,45),main="Pollutant")
abline(h=2,lty=2)
# Plot figure with least square fit
plot(Bivariatedataset$Temperature,Bivariatedataset$Titania,xlab="Temperature", ylab="Titania")
abline(lsfit(Bivariatedataset$Temperature,Bivariatedataset$Titania))
#t-value for 95% confidence
tval <- qt(1-0.05/2,8989)
tval
#95% confidence intervals
round(confint(m1,level=0.95),3)
# Let us look at the standardized residual
StanRes2 <- rstandard(m1)
plot(Bivariatedataset$Temperature,StanRes2,xlab="Temperature", ylab="Standardized Residuals",xlim=c(-2,45),main="Pollutant")
abline(h=2,lty=2)
abline(h=-2,lty=2)
# Detach the data frame
detach(Bivariatedataset)
par(mfrow=c(2,2))
plot(m1)
# Read data from cvs file with ";" instead of ","
pollutiondata <- read.csv2("~/Desktop/Fall 2017/MA 575/Labs/Lab2/AirQualityData.csv",header=TRUE)
# Replace missing data i.e. -200 with NA
pollutiondata[pollutiondata==-200]<-NA
# Force Temperature to be a numeric vector
Temperature = as.numeric(as.character(pollutiondata$Temperature))
Titania = as.numeric(as.character(pollutiondata$PT08.S2.NMHC.))
summary(Temperature)
summary(Titania)
# Create temporary data set with Temperature and Titania pollutant
tempdataset <- data.frame(Titania, Temperature)
rm(Temperature,Titania)
# Data with NA
Bivariatedataset<-tempdataset[complete.cases(tempdataset), ]
# Remove NA
Bivariatedataset<-Bivariatedataset[complete.cases(Bivariatedataset), ]
#pollutiondatareduced<-pollutiondata[complete.cases(pollutiondata), ]
# Print the first 10 data rows
head(Bivariatedataset,10)
# Attach
#attach(Bivariatedataset)
# Plot Titania pollutant vs time
plot(Bivariatedataset$Temperature,Bivariatedataset$Titania,xlab="Temperature", ylab="Titania")
# Perform linear regression between temperature and Titania
m1 <- lm(Titania ~ Temperature, data = Bivariatedataset)
summary(m1)
# Plot figure with least square fit
plot(Bivariatedataset$Temperature,Bivariatedataset$Titania,xlab="Temperature", ylab="Titania")
abline(lsfit(Bivariatedataset$Temperature,Bivariatedataset$Titania))
#t-value for 95% confidence
tval <- qt(1-0.05/2,8989)
tval
#95% confidence intervals
round(confint(m1,level=0.95),3)
# Let us look at the standardized residual
StanRes2 <- rstandard(m1)
plot(Bivariatedataset$Temperature,StanRes2,xlab="Temperature", ylab="Standardized Residuals",xlim=c(-2,45),main="Pollutant")
abline(h=2,lty=2)
abline(h=-2,lty=2)
# Detach the data frame
#detach(Bivariatedataset)
# Plot diagnostic information
par(mfrow=c(2,2))
plot(m1)
head(pollutiondata)
plot(Bivariatedataset$Temperature,StanRes2,xlab="Temperature", ylab="Standardized Residuals",xlim=c(-2,45),main="Pollutant")
colnames(pollutiondata)
sumary(pollutiondata$AbsoluteHumidity)
summary(pollutiondata$AbsoluteHumidity)
AH = as.numeric(as.character(pollutiondata$AbsoluteHumidity))
summary(AH)
dat <- tempdataset[case.complete(tempdataset),]
dat <- tempdataset[cases.complete(tempdataset),]
dat <- tempdataset[complete.cases(tempdataset),]
plot(dat$AH, dat$Titania)
head(dat)
summary(pollutiondata$AbsoluteHumidity)
pollutiondata$AbsoluteHumidity
as.character(pollutiondata$AbsoluteHumidity)
as.numeric(as.character(pollutiondata$AbsoluteHumidity))
AH = as.numeric(as.character(pollutiondata$AbsoluteHumidity))
tempdataset <- data.frame(Titania, AH)
tempdataset <- data.frame(Titania, AH)
Titania = as.numeric(as.character(pollutiondata$PT08.S2.NMHC.))
tempdataset <- data.frame(Titania, AH)
dat <- tempdataset[complete.cases(tempdataset),]
head(dat)
plot(dat$AH, dat$Titania)
m2 = lm(Titania~AH, data = dat)
m2 = lm(Titania~AH, data = dat)
plot(dat$AH, dat$Titania)
abline(m2)
par(mfrow = c(2,2))
plot(m2)
plot(m2)
