sample(c(1,2),c(.4,.6))
dat = dat[,sample(c(1,2),c(.4,.6),replace = TRUE)]
sample(c(1,2),c(.4,.6),replace = TRUE)
?sample
sample.int(10)
sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)
dat = data.frame(a = rnorm(100,3,1), b = rnorm(100, 6, 1))
dat = dat[,sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)]
dat
dat = as.numeric(dat[,sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)])
dat = matrix(a = rnorm(100,3,1), b = rnorm(100, 6, 1))
dat = data.frame(a = rnorm(100,3,1), b = rnorm(100, 6, 1))
dat[,sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)]
dat = dat[,sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)]
dat
dim(dat)
hist.data = dat[,sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)]
dat = matrix(nrow = 100, ncol = 100)
dat[,1] = rnorm(100,3,1)
dat[,2] = rnorm(100, 6, 1))
hist.data = dat[,sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)]
dat[,2] = rnorm(100, 6, 1)
hist.data = dat[,sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)]
dat
dat = matrix(nrow = 100, ncol = 100)
dat[,1] = rnorm(100,3,1)
dat[,2] = rnorm(100, 6, 1)
dat
dat = matrix(0,nrow = 100, ncol = 100)
dat[,1] = rnorm(100,3,1)
dat[,2] = rnorm(100, 6, 1)
dat
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100,3,1)
dat[,2] = rnorm(100, 6, 1)
dat
hist.data = dat[,sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)]
hist.data
dim(hist.data)
index = sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)
dat[,index]
index
hist.data = dat[1:100,index]
hist.data
dim(hist.data)
index = c(1:100, sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE))
index
index = data.frame(a = 1:100, b = sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE))
index
hist.data = dat[index]
index = sample.int(2,size = 100, prob = c(.4,.6), replace = TRUE)
index
dat
dim(dat)
dat[,index]
dat[1:100,index]
rbinom(100,.6)
index = rbinom(size = 100, n = 1, p = .6)
idex
index
rbinom(n = 1, size = 100, p = .6)
index = rbinom(n = 100, size = 1, p = .6)
index
hist.data = apply(dat, 1, function(x) sum(index[x,]*dat[x,]))
index = rbinom(n = 100, size = 1, p = .6)
hist.data = apply(dat, 1, function(x) sum(index[x,]*dat[x,]))
hist.data = apply(dat, 1, function(x) sum(index[x]*dat[x,]))
hist.data
dim(hist.data)
length(hist.data)
hist(hist.data)
set.seed(1985)
#set up tunning variables
n = 100
num_samp = 1000
mu = 5
sim = replicate(num_samp, exp(-mean(rpois(n,mu))))
sim
hist(sim)
estimated_bias = sim - exp(-mu)
hist(estimated_bias)
index = rbinom(n = 100, size = 1, p = .6)
index
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
hist.data = rowsums(matrix*indicator)
hist.data = rowsum(matrix*indicator)
hist.data = rowsum(dat*indicator)
#get sample
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100,3,1)
dat[,2] = rnorm(100, 6, 1)
dat
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
indicator
hist.data = rowsum(dat*indicator)
dat*indicator
hist.dat = rowSums(dat*indicator)
hist.dat
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
dev.new()
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
view(mixture1)
mixture1
dat
hist(dat[,1])
hist(dat[,2])
set.seed(1665)
?rnorm
set.seed(2010)
#get sample
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100, mean = 3, sd = 1)
dat[,2] = rnorm(100, mean = 6, sd = 1)
#get indicator
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
#get histogram data
hist.dat = rowSums(dat*indicator)
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
#set seed
set.seed(2010)
#get sample
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100, mean = 3, sd = 1)
dat[,2] = rnorm(100, mean = 6, sd = 1)
#get indicator
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
#get histogram data
hist.dat = rowSums(dat*indicator)
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0.05)
truehist(hist.dat, h = 0.7, x0 = 0.1)
truehist(hist.dat, h = 0.7, x0 = 0.15)
truehist(hist.dat, h = 0.7, x0 = 0.2)
truehist(hist.dat, h = 0.7, x0 = 0.25)
set.seed(1355)
#get sample
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100, mean = 3, sd = 1)
dat[,2] = rnorm(100, mean = 6, sd = 1)
#get indicator
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
#get histogram data
hist.dat = rowSums(dat*indicator)
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0.05)
truehist(hist.dat, h = 0.7, x0 = 0.1)
truehist(hist.dat, h = 0.7, x0 = 0.15)
truehist(hist.dat, h = 0.7, x0 = 0.2)
truehist(hist.dat, h = 0.7, x0 = 0.25)
set.seed(1391)
#get sample
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100, mean = 3, sd = 1)
dat[,2] = rnorm(100, mean = 6, sd = 1)
#get indicator
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
#get histogram data
hist.dat = rowSums(dat*indicator)
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
set.seed(2000)
#get sample
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100, mean = 3, sd = 1)
dat[,2] = rnorm(100, mean = 6, sd = 1)
#get indicator
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
#get histogram data
hist.dat = rowSums(dat*indicator)
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0.05)
truehist(hist.dat, h = 0.7, x0 = 0.1)
truehist(hist.dat, h = 0.7, x0 = 0.15)
truehist(hist.dat, h = 0.7, x0 = 0.2)
truehist(hist.dat, h = 0.7, x0 = 0.25)
set.seed(2030)
#get sample
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100, mean = 3, sd = 1)
dat[,2] = rnorm(100, mean = 6, sd = 1)
#get indicator
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
#get histogram data
hist.dat = rowSums(dat*indicator)
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
#get sample
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100, mean = 3, sd = 1)
dat[,2] = rnorm(100, mean = 6, sd = 1)
#get indicator
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
#get histogram data
hist.dat = rowSums(dat*indicator)
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
#get sample
dat = matrix(0,nrow = 100, ncol = 2)
dat[,1] = rnorm(100, mean = 3, sd = 1)
dat[,2] = rnorm(100, mean = 6, sd = 1)
#get indicator
mixture1 = rbinom(n = 100, size = 1, p = .4)
indicator = matrix(0, nrow = 100, ncol = 2)
indicator[,1] = mixture1
indicator[,2] = ifelse(indicator[,1] == 0, 1, 0)
#get histogram data
hist.dat = rowSums(dat*indicator)
#load necessary packages
library(MASS)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
#Check out histograms
par(mfrow = c(2.,3))
truehist(hist.dat, h = 0.1, x0 = 0)
truehist(hist.dat, h = 0.5, x0 = 0)
truehist(hist.dat, h = 0.7, x0 = 0)
truehist(hist.dat, h = 0.9, x0 = 0)
truehist(hist.dat, h = 1.2, x0 = 0)
truehist(hist.dat, h = 1.5, x0 = 0)
set.seed(1665)
n = 100
num_samp = 1000
mu = 5
sim = replicate(num_samp, exp(-mean(rpois(n,mu))))
estimated_bias = sim - exp(-mu)
mean_bias = mean(estimated_bias)
paste("The estiamted bias of the MLE estimator:", round(mean_bias, 6))
hist(sim)
exp(-mu)
hist(sim)
var(sim)
sd(sim)
sd(sim)^2
